/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.lib.audio.mwengine;

public class WaveShaper extends BaseProcessor {
  private transient long swigCPtr;

  protected WaveShaper(long cPtr, boolean cMemoryOwn) {
    super(MWEngineCoreJNI.WaveShaper_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WaveShaper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MWEngineCoreJNI.delete_WaveShaper(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public WaveShaper(float amount, float level) {
    this(MWEngineCoreJNI.new_WaveShaper(amount, level), true);
  }

  public float getAmount() {
    return MWEngineCoreJNI.WaveShaper_getAmount(swigCPtr, this);
  }

  public void setAmount(float value) {
    MWEngineCoreJNI.WaveShaper_setAmount(swigCPtr, this, value);
  }

  public float getLevel() {
    return MWEngineCoreJNI.WaveShaper_getLevel(swigCPtr, this);
  }

  public void setLevel(float value) {
    MWEngineCoreJNI.WaveShaper_setLevel(swigCPtr, this, value);
  }

  public void process(SWIGTYPE_p_AudioBuffer sampleBuffer, boolean isMonosource) {
    MWEngineCoreJNI.WaveShaper_process(swigCPtr, this, SWIGTYPE_p_AudioBuffer.getCPtr(sampleBuffer), isMonosource);
  }

}
